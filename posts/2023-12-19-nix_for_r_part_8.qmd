---
date: 2023-12-19
title: Reproducible data science with Nix, part 8 -- nixpkgs, a tale of the magic of free and open source software and a call for charity
categories:
  - R
  - nix
toc: true
execute:
  freeze: auto
---


<div style="text-align:center;">
<p><img src="../assets/img/santa_tux.jpg" width="100%"/></p>
</div>
<p><em>This is part 8 of a series of blog posts about Nix. Check out
the other parts <a href="https://b-rodrigues.github.io/blog/index.html#category=nix">here</a>.
TLDR: free and open source software is one of the most important
common goods with enormous positive externalities: if you want to
help funding it, keep reading!</em></p>
<p>I wanted to quickly discuss about <code>nixpkgs</code>, which is the collection of packages
that can be installed using Nix. Why is a project like Nix and <code>nixpkgs</code>
important, even if you don’t use Nix? In actuality, you may not realise it, but
you very much benefit from projects like Nix even if you don’t use it. Let me
explain.</p>
<p><code>nixpkgs</code> is “just” a Github repository containing thousands upon thousands of
Nix expressions. When installing a package, these expressions get evaluated, and
the package in question gets installed. What <em>installed</em> means can vary:
sometimes the package gets built from source, sometimes a pre-compiled binary
package for your operating system gets downloaded and installed.</p>
<p>For example,
<a href="https://github.com/NixOS/nixpkgs/blob/dce218f4f35440622d2056f93ddc335351763bb4/pkgs/development/libraries/quarto/default.nix">here</a>
is the Nix expression that downloads and installs Quarto. This is an example of
an expression that downloads the pre-compiled Quarto package from Quarto’s own
Github repository, and then <em>installs</em> it. The installation process in this case
is essentially making sure that Quarto is able to find its dependencies, which
also get installed from Nix, and some R and Python packages to make
Quarto work well with both languages also get installed.</p>
<p>Because Nix packages are “nothing but” Nix expressions hosted on Github,
contributing to Nix is as simple as opening a PR. For example,
<a href="https://github.com/NixOS/nixpkgs/pull/263108">here</a> is a draft PR I opened to
prepare for the imminent release of Quarto <code>1.4</code>. My goal when I opened this
draft PR was to get used to contributing to <code>nixpkgs</code> (this was my second or
third PR to <code>nixpkgs</code>, and I did some rookie mistakes when opening my first
ones) and also to make the latest version of Quarto available on Nix as quickly
as possible. But this PR had an unexpected consequence: through it, we found a
bug in Quarto, which was then fixed before the actual release of the next
version!</p>
<p>You see, how these things work is that when software gets released, operating
system specific packages get built downstream. In the case of Quarto, this is
not entirely true though: the developers of Quarto release many pre-compiled
packages for Windows, macOS and several Linux distribution themselves. But they
don’t do so for many other operating systems (which is entirely normal: there’s
just too many! So releasing pre-built binaries for the main operating systems is
more than enough), so the maintainers of these other operating systems (or
package managers) have to package the software themselves. In the case of
scientific software like Quarto, this usually means that it must get packaged
for the Conda package manager (popular among Python users) and Nix (and there’s
certainly other package managers out there that provide Quarto for other
<em>exotic</em> systems) (Note: in the case of Quarto, I think the Quarto devs
themselves also package it for Conda, though).</p>
<p>Turns out that when trying to package the pre-releases of Quarto for Nix, we
discovered a regression in the upstream code that would not only affect
packaging for Nix, but also for other package managers. We opened an issue on
<a href="https://github.com/quarto-dev/quarto-cli/issues/7344">Quarto’s issue tracker</a>
and after some discussion, the bug was identified and adressed in a matter of
hours. And now everyone gets to enjoy a better version of Quarto!</p>
<p>This type of thing happens quite a lot in the background of open source
development. My mind always gets blown when I think about the enormous amount of
hours that get put by hobbyists and paid developers into open source and how
well everything works. Truly a Christmas miracle (but one that happens all
around the year)!</p>
<p>But it’s not all good and perfect. Some software is more complex to package, and
requires much more work. For example the RStudio IDE is one of these. It’s a
complex piece of software with many dependencies, and while it is available on
Nix, it can only be installed on Windows and Linux. If you’re a Nix user on
macOS, you won’t be able to install RStudio, unfortunately. And, unfortunately
also, if you install RStudio using the usual macOS installer, it won’t be able
to find any version of R and R packages installed with Nix. This is because
RStudio needs to be patched to make it work nicely with Nix (just like we have
to patch and prepare Quarto to play well with Nix). And packaging Rstudio for
Nix on macOS requires some expertise and hardware that we R users/contributers
to Nix don’t have all have access to.</p>
<p>This is where I appeal to your generosity: I have contacted a company called
Numtide which offers a packaging service. You tell them which software you want
on Nix, they write the expression and open a PR to <code>nixpkgs</code>. But this costs
money: so I started a Gofundme which you can find
<a href="https://www.gofundme.com/f/package-rstudio-for-nix-on-macos-platforms">here</a>
to fund this. The goal is 4500€, which would cover the work, plus Gofundme
fees and interest rate risk. I stated in the Gofundme that if the goal was not
reached until the end of the year, I would donate all the money to the R
foundation, but I might extend it to end of January 2024 instead.</p>
<p>So here is my ask: if you want to help make free and open source software
better, consider donating to this Gofundme! As explained above, even if you
don’t use Nix, everyone can benefit from work that is done by everyone, be it
upstream or downstream. And if the goal is not met, your donation will go to the
R foundation anyways!</p>
<p>The link to the Gofundme is
<a href="https://www.gofundme.com/f/package-rstudio-for-nix-on-macos-platforms">here</a>.</p>
<p>I hope you can help out with this and make free and open source available and
better for everyone.</p>
<p>Many thanks, merry Christmas and happy new year!</p>
